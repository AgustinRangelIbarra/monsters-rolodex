{"version":3,"sources":["components/card/card.jsx","components/card-list/card-list.jsx","components/searchBox/searchBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","alt","src","image","name","email","CardList","monsters","map","id","SearchBox","placeholder","handleChange","type","onChange","App","componentDidMount","fetchData","state","currentPage","a","fetch","then","res","json","response","setState","results","console","log","handleSearch","e","searchfield","target","value","this","nextPage","prevPage","filteredMonsters","filter","toLowerCase","includes","onClick","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kYAEaA,EAAO,SAAC,GAAgB,IAAdC,EAAa,EAAbA,QACtB,OACC,sBAAKC,UAAU,iBAAf,UACC,qBAAKC,IAAI,UAAUC,IAAKH,EAAQI,QAChC,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,YCJFC,G,OAAW,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAEzB,OACC,qBAAKP,UAAU,YAAf,SACEO,EAASC,KAAI,SAACT,GAAD,OACb,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQU,WCLVC,G,cAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACxB,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MC8D9DG,G,yDA1Dd,aAAe,IAAD,8BACb,gBASDC,kBAAoB,WACnB,EAAKC,UAAU,EAAKC,MAAMC,cAXb,EAcdF,UAdc,sBAcF,sBAAAG,EAAA,sEAELC,MAAM,mDAAD,OAAoD,EAAKH,MAAMC,cACxEG,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAc,EAAKC,SAAS,CAAEnB,SAAUkB,EAASE,aACtDL,MAAK,kBAAMM,QAAQC,IAAI,EAAKX,UALnB,2CAdE,EAsBdY,aAAe,SAACC,GAAD,OAAO,EAAKL,SAAS,CAAEM,YAAaD,EAAEE,OAAOC,SAnB3D,EAAKhB,MAAQ,CACZX,SAAU,GACVY,YAAa,EACba,YAAa,IAND,E,0CAwBd,WAAU,IAAD,SACuCG,KAAKjB,MAA5CX,EADA,EACAA,SAAUyB,EADV,EACUA,YAAab,EADvB,EACuBA,YAEzBiB,EAAQ,uCAAG,sBAAAhB,EAAA,sEACV,EAAKM,SAAS,CAAEP,YAAaA,EAAc,IADjC,OAEhB,EAAKF,YAFW,2CAAH,qDAMRoB,EAAQ,uCAAG,sBAAAjB,EAAA,2DACZD,EAAc,GADF,gCAET,EAAKO,SAAS,CAAEP,YAAaA,EAAc,IAFlC,OAGf,EAAKF,YAHU,0DAAH,qDASRqB,EAAmB/B,EAASgC,QAAO,SAACxC,GAAD,OACxCA,EAAQK,KAAKoC,cAAcC,SAAST,EAAYQ,kBAGjD,OACC,sBAAKxC,UAAU,MAAf,UACC,kDACA,cAAC,EAAD,CAAWW,YAAY,kBAAkBC,aAAcuB,KAAKL,eAC5D,wBAAQY,QAASL,EAAjB,kBACA,wBAAQK,QAASN,EAAjB,kBACA,cAAC,EAAD,CAAU7B,SAAU+B,W,GArDNK,IAAMC,YCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b2abd4a5.chunk.js","sourcesContent":["import './card.styles.css'\r\n\r\nexport const Card = ({ monster}) => {\r\n\treturn (\r\n\t\t<div className=\"card-container\">\r\n\t\t\t<img alt=\"monster\" src={monster.image} />\r\n\t\t\t<h2>{monster.name}</h2>\r\n\t\t\t<p>{monster.email}</p>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import { Card } from \"../card/card\";\r\nimport \"./card-list.styles.css\";\r\n\r\nexport const CardList = ({monsters}) => {\r\n\t// console.log(monsters);\r\n\treturn (\r\n\t\t<div className=\"card-list\">\r\n\t\t\t{monsters.map((monster) => (\r\n\t\t\t\t<Card key={monster.id} monster={monster}/>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { IsConstructor } from \"es-abstract/es2019\";\r\nimport \"./searchBox.styles.css\";\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n\t<input className=\"search\" type=\"search\" placeholder={placeholder} onChange={handleChange} />\r\n);\r\n","import React from \"react\";\n\nimport { CardList } from \"./components/card-list/card-list\";\nimport { SearchBox } from \"./components/searchBox/searchBox\";\n\nimport \"./App.css\";\n\nclass App extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tmonsters: [],\n\t\t\tcurrentPage: 1,\n\t\t\tsearchfield: \"\",\n\t\t};\n\t}\n\n\tcomponentDidMount = () => {\n\t\tthis.fetchData(this.state.currentPage);\n\t};\n\n\tfetchData = async () => {\n\t\t// console.log(this.state);\n\t\tawait fetch(`https://rickandmortyapi.com/api/character/?page=${this.state.currentPage}`)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((response) => this.setState({ monsters: response.results }))\n\t\t\t.then(() => console.log(this.state));\n\t};\n\n\thandleSearch = (e) => this.setState({ searchfield: e.target.value });\n\n\trender() {\n\t\tconst { monsters, searchfield, currentPage } = this.state;\n\n\t\tconst nextPage = async () => {\n\t\t\tawait this.setState({ currentPage: currentPage + 1 });\n\t\t\tthis.fetchData();\n\t\t\t// await console.log(this.state.currentPage);\n\t\t};\n\n\t\tconst prevPage = async () => {\n\t\t\tif (currentPage > 1) {\n\t\t\t\tawait this.setState({ currentPage: currentPage - 1 });\n\t\t\t\tthis.fetchData();\n\t\t\t\t// await console.log(this.state.currentPage);\n\t\t\t} else {\n\t\t\t}\n\t\t};\n\n\t\tconst filteredMonsters = monsters.filter((monster) =>\n\t\t\tmonster.name.toLowerCase().includes(searchfield.toLowerCase())\n\t\t);\n\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h1>Monsters Rolodex</h1>\n\t\t\t\t<SearchBox placeholder=\"Search monsters\" handleChange={this.handleSearch} />\n\t\t\t\t<button onClick={prevPage}>Prev</button>\n\t\t\t\t<button onClick={nextPage}>Next</button>\n\t\t\t\t<CardList monsters={filteredMonsters} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}